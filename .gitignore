import os
import sys
import math

import array

import statistics

from matplotlib import rc
rc('font', family='Droid Sans', weight='normal', size=14)

import matplotlib.pyplot as plt


class WikiGraph:

    def load_from_file(self, filename):
        print('Загружаю граф из файла: ' + filename)

        with open(filename) as f:
            (n, _nlinks) = (0, 0)
            k=f.readline()
            k=k.rstrip()
            n,_nlinks=map(int, k.split())
            self._titles = []
            print(n, _nlinks)
            self._sizes = array.array('L', [0]*n)
            self._links = array.array('L', [0]*_nlinks)
            self._redirect = array.array('B', [0]*n)
            self._offset = array.array('L', [0]*(n+1))
            for i in range(n):
                title=f.readline()
                title=title.rstrip()
                print(i)
                self._titles.append(title)
                g=f.readline()
                g=g.rstrip()
                size, redirect,n=map(int,g.split())
                self._sizes[i]=size
                self._redirect[i]=redirect
                for y in range(n):
                    L=int(f.readline().rstrip())
                    self._links[i+y]=L
                if i:
                    self._offset[i]=self._offset[i-1]+n


        print('Граф загружен')

    def get_number_of_links_from(self, _id):
        return self._offset[_id+1]-self._offset[_id]

    def get_links_from(self, _id):
        g=self._links[self._offset[_id]:self._offset[_id+1]]
        return g

    def get_id(self, title):
        for i in range(len(self._titles)):
            if self._titles==title:
                return i

    def get_number_of_pages(self):
        return len(self._titles)-self._redirect.count(0)

    def is_redirect(self, _id):
        if self._redirect[_id]:
            return True
        else:
            return False



    def get_title(self, _id):
        return self._titles[_id]

    def get_page_size(self, _id):
        return self._sizes[_id]




def hist(fname, data, bins, xlabel, ylabel, title, facecolor='green', alpha=0.5, transparent=True, **kwargs):
    plt.clf()
    # TODO: нарисовать гистограмму и сохранить в файл



wg = WikiGraph()
wg.load_from_file('wiki_small.txt')

print('количество статей с перенаправлением',wg._redirect.count(0))
for i in range(len(wg._sizes)):
        if wg.get_number_of_links_from(i)<min1:
            min1=wg.get_number_of_links_from(i)

print('минимальное количество ссылок из статьи',min1)
